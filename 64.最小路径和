/**
 * @param {number[][]} grid
 * @return {number}
 */
var minPathSum = function(grid) {
  const xlen = grid.length;
  const ylen = grid[0].length
  if (!xlen) return 0;
  const dp = Array.from(Array(xlen), () => new Array(ylen).fill(0));
  dp[0][0] = grid[0][0];
  for (let i = 0; i < xlen; i++) {
    for (let j = 0; j < ylen; j++) {
      if (i === 0 && j === 0) continue;
      else if (i === 0) dp[i][j] = dp[i][j - 1] + grid[i][j];
      else if (j === 0) dp[i][j] = dp[i - 1][j] + grid[i][j];
      else {
        dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + grid[i][j];
      }
    }
  }
  return dp[xlen - 1][ylen - 1];
}
